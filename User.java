import java.sql.*;
import javax.swing.*;
import java.awt.event.*;
import javax.swing.table.DefaultTableModel;

public class User extends javax.swing.JFrame {
    
    private JButton saveButton = new JButton("Save");
    private JButton updateButton = new JButton("Update");
    private JButton resetButton = new JButton("Reset");
    private JButton deleteButton = new JButton("Delete");
    
    private void initializeComponents() {
    // Ensure buttons are added to your GUI
    JPanel panel = new JPanel();
    panel.add(saveButton);
    panel.add(updateButton);
    panel.add(resetButton);
    panel.add(deleteButton);

    // Add the panel to the frame (or other container)
    JFrame frame = new JFrame("Form Actions");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.add(panel);
    frame.pack();
    frame.setVisible(true);
}
    
    
    public User() {
        initComponents();
        loadUserTable();
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackgroundPanel = new javax.swing.JPanel();
        MainPanel = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        ManageUserTableScrollPane = new javax.swing.JScrollPane();
        ManageUserTable = new javax.swing.JTable();
        NameLabel = new javax.swing.JLabel();
        NameTextfield = new javax.swing.JTextField();
        MobilenumberLabel = new javax.swing.JLabel();
        MobilenumberTextfield = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        EmailTextfield = new javax.swing.JTextField();
        PasswordLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        AddressLabel = new javax.swing.JLabel();
        AddressTextfield = new javax.swing.JTextField();
        StatusLabel = new javax.swing.JLabel();
        StatusComboBox = new javax.swing.JComboBox<>();
        SaveButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JButton();
        GoToDashboard = new javax.swing.JButton();
        GoToUser = new javax.swing.JButton();
        GoToOrder = new javax.swing.JButton();
        GoToProduct = new javax.swing.JButton();
        GoToCategory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(1366, 768, 768, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setName("User"); // NOI18N

        BackgroundPanel.setBackground(new java.awt.Color(24, 65, 127));
        BackgroundPanel.setMaximumSize(new java.awt.Dimension(1366, 768));
        BackgroundPanel.setMinimumSize(new java.awt.Dimension(1366, 768));
        BackgroundPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainPanel.setMaximumSize(new java.awt.Dimension(1050, 570));
        MainPanel.setMinimumSize(new java.awt.Dimension(1050, 570));

        HeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        HeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderLabel.setText("Manage User");

        ManageUserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Mobile no.", "Email", "Address", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageUserTableScrollPane.setViewportView(ManageUserTable);
        if (ManageUserTable.getColumnModel().getColumnCount() > 0) {
            ManageUserTable.getColumnModel().getColumn(0).setResizable(false);
            ManageUserTable.getColumnModel().getColumn(1).setResizable(false);
            ManageUserTable.getColumnModel().getColumn(2).setResizable(false);
            ManageUserTable.getColumnModel().getColumn(3).setResizable(false);
            ManageUserTable.getColumnModel().getColumn(4).setResizable(false);
            ManageUserTable.getColumnModel().getColumn(5).setResizable(false);
        }

        NameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        NameLabel.setText("Name");

        NameTextfield.setForeground(new java.awt.Color(204, 204, 204));
        NameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTextfieldActionPerformed(evt);
            }
        });

        MobilenumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        MobilenumberLabel.setText("Mobile no.");

        MobilenumberTextfield.setForeground(new java.awt.Color(204, 204, 204));
        MobilenumberTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MobilenumberTextfieldActionPerformed(evt);
            }
        });

        EmailLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        EmailLabel.setText("Email");

        EmailTextfield.setForeground(new java.awt.Color(204, 204, 204));
        EmailTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextfieldActionPerformed(evt);
            }
        });

        PasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        PasswordLabel.setText("Password");

        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        AddressLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AddressLabel.setText("Address");

        AddressTextfield.setForeground(new java.awt.Color(204, 204, 204));
        AddressTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressTextfieldActionPerformed(evt);
            }
        });

        StatusLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        StatusLabel.setText("Status");

        StatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        StatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusComboBoxActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(ManageUserTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(MobilenumberTextfield, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(EmailTextfield, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(AddressTextfield, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(StatusComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(MainPanelLayout.createSequentialGroup()
                            .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NameLabel)
                                .addComponent(MobilenumberLabel)
                                .addComponent(EmailLabel)
                                .addComponent(PasswordLabel)
                                .addComponent(AddressLabel)
                                .addComponent(StatusLabel))
                            .addGap(248, 248, 248))
                        .addComponent(NameTextfield))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(SaveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CloseButton)))
                .addContainerGap(174, Short.MAX_VALUE))
            .addComponent(HeaderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderLabel)
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ManageUserTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(NameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MobilenumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MobilenumberTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmailTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PasswordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddressTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(StatusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveButton)
                            .addComponent(UpdateButton)
                            .addComponent(ResetButton)
                            .addComponent(CloseButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GoToDashboard.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GoToDashboard.setText("Dashboard");

        GoToUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GoToUser.setText("User");

        GoToOrder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GoToOrder.setText("Order");
        GoToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoToOrderActionPerformed(evt);
            }
        });

        GoToProduct.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GoToProduct.setText("Product");

        GoToCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GoToCategory.setText("Category");

        javax.swing.GroupLayout BackgroundPanelLayout = new javax.swing.GroupLayout(BackgroundPanel);
        BackgroundPanel.setLayout(BackgroundPanelLayout);
        BackgroundPanelLayout.setHorizontalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundPanelLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(GoToDashboard, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GoToOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GoToCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GoToProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GoToUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(159, 159, 159))
        );
        BackgroundPanelLayout.setVerticalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(BackgroundPanelLayout.createSequentialGroup()
                        .addComponent(GoToDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GoToUser, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GoToCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(GoToProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GoToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GoToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoToOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoToOrderActionPerformed

    private void MobilenumberTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MobilenumberTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MobilenumberTextfieldActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void NameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextfieldActionPerformed

    private void EmailTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextfieldActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void AddressTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressTextfieldActionPerformed

    private void StatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StatusComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }
    
    private void setupComponents() {
        loadUserTable();
        setupActionListeners();
        setupNavigation();
    }
    
    private void setupActionListeners() {
    // Assuming you have buttons named saveButton, updateButton, resetButton, deleteButton
    saveButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Code to handle save functionality
            saveData();
        }
    });

    updateButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Code to handle update functionality
            updateData();
        }
    });

    resetButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Code to handle reset functionality
            resetForm();
        }
    });

    deleteButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Code to handle delete functionality
            deleteData();
        }
    });
}
    
private void saveData() {
    // Implement save logic here
    System.out.println("Data saved successfully.");
}

private void updateData() {
    // Implement update logic here
    System.out.println("Data updated successfully.");
}

private void resetForm() {
    // Implement reset logic here
    System.out.println("Form reset successfully.");
}

private void deleteData() {
    // Implement delete logic here
    System.out.println("Data deleted successfully.");
}
    
    
    
    private void setupNavigation() {
        GoToUser.addActionListener(e -> {
            new User().setVisible(true);
            this.dispose();
        });
        
        GoToCategory.addActionListener(e -> {
            new Category().setVisible(true);
            this.dispose();
        });
        
        GoToProduct.addActionListener(e -> {
            new Product().setVisible(true);
            this.dispose();
        });
        
        GoToOrder.addActionListener(e -> {
            new Order().setVisible(true);
            this.dispose();
        });
    }
    
    private void loadUserTable() {
        Connection conn = DatabaseConnection.getConnection();
        if (conn != null) {
            try {
                String query = "SELECT id, name, mobile_no, email, address, status FROM users ORDER BY name";
                PreparedStatement stmt = conn.prepareStatement(query);
                ResultSet rs = stmt.executeQuery();

                DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(new String[]{"ID", "Name", "Mobile no.", "Email", "Address", "Status"});

                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("name"),
                        rs.getString("mobile_no"),
                        rs.getString("email"),
                        rs.getString("address"),
                        rs.getString("status")
                    });
                }

                ManageUserTable.setModel(model);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error loading users: " + e.getMessage());
            } finally {
                DatabaseConnection.closeConnection(conn);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField AddressTextfield;
    private javax.swing.JPanel BackgroundPanel;
    private javax.swing.JButton CloseButton;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextfield;
    private javax.swing.JButton GoToCategory;
    private javax.swing.JButton GoToDashboard;
    private javax.swing.JButton GoToOrder;
    private javax.swing.JButton GoToProduct;
    private javax.swing.JButton GoToUser;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTable ManageUserTable;
    private javax.swing.JScrollPane ManageUserTableScrollPane;
    private javax.swing.JLabel MobilenumberLabel;
    private javax.swing.JTextField MobilenumberTextfield;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTextfield;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JComboBox<String> StatusComboBox;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JButton UpdateButton;
    // End of variables declaration//GEN-END:variables
}